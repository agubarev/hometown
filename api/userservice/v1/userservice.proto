syntax = "proto3";

package hometown.userservice.v1;

option go_package = ".;userservice";

import "google/protobuf/wrappers.proto";
import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/empty.proto";
import "userservice/v1/user.proto";
import "userservice/v1/profile.proto";
import "userservice/v1/phone.proto";

// Generated according to https://cloud.google.com/apis/design/standard_methods
service UserService {
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {
    option (google.api.http) = {
      get: "/v1/users"
    };
  }

  rpc GetUser(GetUserRequest) returns (User) {
    option (google.api.http) = {
      get: "/v1/{id=*}"
    };
  }

  rpc CreateUser(CreateUserRequest) returns (User) {
    option (google.api.http) = {
      post: "/v1/users"
      body: "user_new"
    };
  }

  rpc UpdateUser(UpdateUserRequest) returns (User) {
    option (google.api.http) = {
      patch: "/v1/{id=*}"
      body: "user_essential"
    };
  }

  rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/{id=*}"
    };
  }

  rpc GetProfile(GetProfileRequest) returns (Profile) {
    option (google.api.http) = {
      get: "/v1/{user_id=*}"
    };
  }

  rpc CreateProfile(CreateProfileRequest) returns (Profile) {
    option (google.api.http) = {
      post: "/v1/users/{user_id=*}/profile"
      body: "profile"
    };
  }

  rpc UpdateProfile(UpdateProfileRequest) returns (Profile) {
    option (google.api.http) = {
      patch: "/v1/users/{user_id=*}/profile"
      body: "profile"
    };
  }

  rpc CheckAvailability(CheckAvailabilityRequest) returns (google.protobuf.BoolValue) {
    option (google.api.http) = {
      get: "/v1/users/checkavailability"
    };
  }

  rpc ListEmails(ListEmailsRequest) returns (ListEmailsResponse) {
    option (google.api.http) = {
      get: "/v1/users"
    };
  }

  rpc GetEmail(GetEmailRequest) returns (Email) {
    option (google.api.http) = {
      get: "/v1/{id=*}"
    };
  }

  rpc CreateEmail(CreateEmailRequest) returns (Email) {
    option (google.api.http) = {
      post: "/v1/users"
      body: "user_new"
    };
  }

  rpc UpdateEmail(UpdateEmailRequest) returns (Email) {
    option (google.api.http) = {
      patch: "/v1/{id=*}"
      body: "user_essential"
    };
  }

  rpc DeleteEmail(DeleteEmailRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/{id=*}"
    };
  }
}

message CreateProfileRequest {
  string user_id = 1;
  Profile profile = 2;
}

message UpdateProfileRequest {
  string user_id = 1;
  Profile profile = 2;
}

message CheckAvailabilityRequest {
  string username = 1;
  string email = 2;
}

message GetProfileRequest {
  string user_id = 1;
}

message GetProfileResponse {
  Profile profile = 1;
}

message ListUsersRequest {
  int32 page_size = 1;
  string page_token = 2;
}

message ListUsersResponse {
  repeated User users = 1;
  string next_page_token = 2;
}

message GetUserRequest {
  string id = 1;
  string username = 2;
}

message CreateUserRequest {
  UserNew user_new = 1;
}

message UpdateUserRequest {
  string id = 1;
  UserEssential user_essential = 2;
  google.protobuf.FieldMask update_mask = 3;
}

message DeleteUserRequest {
  string id = 1;
}
